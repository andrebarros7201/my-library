generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid(2))
  username    String       @unique @db.VarChar(50)
  password    String       @db.VarChar(255)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  collections Collection[]
  UserBook    UserBook[]
}

model Collection {
  id          String   @id @default(cuid(2))
  name        String
  description String?
  user        User     @relation(fields: [userID], references: [id], onDelete: Cascade)
  userID      String
  books       Book[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Book {
  id                 String       @id
  cover_i            Int
  imageURL_S         String
  imageURL_M         String
  imageURL_L         String
  has_fulltext       Boolean
  edition_count      Int
  title              String       @db.VarChar(255)
  author_name        String[]
  first_publish_year Int
  ia                 String[]
  author_key         String[]
  public_scan_b      Boolean
  collections        Collection[]
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  UserBook           UserBook[]
}

model UserBook {
  id     String     @id @default(cuid(2))
  userID String
  user   User       @relation(fields: [userID], references: [id], onDelete: Cascade)
  bookID String
  book   Book       @relation(fields: [bookID], references: [id], onDelete: Cascade)
  status ReadStatus
}

enum ReadStatus {
  NOT_READ
  CURRENTLY_READING
  FINISHED
}